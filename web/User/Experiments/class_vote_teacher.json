{"all_procs": {"procedure_1.csv": [["Item", "trial type", "Max Time", "Text", "Shuffle 1", ""], ["2", "class_vote_teacher", "user", "Thank you for participating in this experiment. The task will begin during the next trial.", "off", ""], ["", "", "", "", "", ""]]}, "cond_array": [["Name", "Notes", "Stimuli", "Procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", ""], ["condition_1", "You can put more detailed notes in this field", "stimuli_1.csv", "procedure_1.csv", "off", "", "random", "", "", "5", ""], ["", "", "", "", "", "", "", "", "", "", ""]], "all_stims": {"stimuli_1.csv": [["Cue", "Answer", "question_id", "script_url", "response_id", ""], ["A", "ginger", "1_45I8VIvnHwR3gvDyizZO9pY9lZv-lLQH6MWk3QTnhg", "https://script.google.com/macros/s/AKfycbz3KSAcuF_6Gg6-25l2a22dNSeMvo5agjPHB467BceyUbzJOfry/exec", "1XOsZuX2-_fSIDnveJSBoIHbpSXnYpoM7N9QQ8HO4ctA", ""], ["B", "Banana", "", "", "", ""], ["", "", "", "", "", ""]]}, "procedure": null, "stimuli": null, "public_key": "qbLtY/WKogexV2MtzKeCjHng8DKNjOOmIfEnpj1Z90A=", "save_script": "https://script.google.com/macros/s/AKfycbyMQS4T2DpGkq6Ue4IDaRVHKKuQXoOnCm0116m92hmQTfn-Syk/exec", "parsed_procs": {"procedure_1.csv": [{"trial type": "class_vote_teacher", "": "", "item": "2", "max time": "user", "text": "Thank you for participating in this experiment. The task will begin during the next trial.", "shuffle 1": "off"}]}, "surveys": {}, "trialtypes": {"instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>", "class_vote_student": "<!--\r\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\r\n    A program for running experiments on the web\r\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\r\n\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License version 3 as published by\r\n    the Free Software Foundation.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n \t\t\r\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\r\n*/\r\n\r\nThis makes heavy use of amcharts - available at https://www.amcharts.com/\r\n\r\n-->\r\n<style>\r\n.submit_response_btn{\r\n  width:100%;\r\n}\r\n#response_table{\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:300;\r\n  height:300;\r\n  display:none;\r\n}\r\n#start_quiz_btn{\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:100;\r\n  height:50;\r\n}\r\n</style>\r\n<button class=\"btn btn-primary\" id=\"start_quiz_btn\">Start</button>\r\n<div id=\"response_table\"></div>\r\n\r\n\r\n<!-- Chart code -->\r\n<script>\r\n\r\n//wrap the below into a tidy object at some point.\r\n\r\nvar participant_code = makeid(10);\r\nvar question_no      = -1;\r\n\r\n\r\ndata = {\r\n  question_id: \"{{question_id}}\",\r\n  response_id: \"{{response_id}}\",\r\n  action:      \"start_student\",\r\n  participant_code: participant_code\r\n};\r\n  \r\n$(\"#start_quiz_btn\").on(\"click\",function(){\r\n  $.ajax({\r\n    type: 'POST',\r\n    url: \"{{script_url}}\",\r\n    data: data,\r\n    crossDomain: true,\r\n    timeout: 120000,\r\n    success:function(response){\r\n      //as it stands, this will never happen as Collector doesn't allow posts to it.\r\n    }\r\n  })\r\n  .catch(function(error){\r\n    //read the google sheet\r\n    refresh_question();\r\n  });\r\n});\r\n\r\nfunction refresh_question(){\r\n  ParseGSX.parseGSX(data.question_id,function(result){\r\n    show_question(result);\r\n    setTimeout(function(){\r\n      refresh_question();\r\n    },2000);\r\n  });\r\n}\r\n\r\n\r\nfunction show_question(result){\r\n  //identify current row\r\n  question_no = 0;\r\n  result.forEach(function(row,row_index){\r\n    if(row.complete == \"yes\"){\r\n      question_no = row_index + 1;\r\n    }\r\n  });\r\n  var this_row         = result[question_no];\r\n  var question         = this_row.question;\r\n  var responses        = this_row.responses.split(\"|\");\r\n  var correct_response = this_row.correct_response;\r\n  \r\n  var response_table_html = \"<table>\" + \r\n                              \"<tr>\" +\r\n                                \"<td><h4>\" + question + \"</h4><br><br></td>\" + \r\n                              \"</tr>\";\r\n  responses.forEach(function(response){\r\n    response_table_html += \"<tr><td><button class='btn btn-primary submit_response_btn'>\" + response + \"</button></td></tr>\";\r\n  });                  \r\n  response_table_html += \"</table>\";\r\n                              \r\n  $(\"#response_table\").html(response_table_html);\r\n  $(\".submit_response_btn\").on(\"click\",function(){\r\n    submit_response(this.innerHTML);\r\n  });\r\n  $(\"#response_table\").show();\r\n  $(\"#start_quiz_btn\").hide();\r\n}\r\n\r\nfunction submit_response(response){\r\n  console.dir(question_no);\r\n  data = {\r\n    question_id: \"{{question_id}}\",\r\n    response_id: \"{{response_id}}\",\r\n    action:      \"vote\",\r\n    question_no: question_no,\r\n    participant_code: participant_code,\r\n    response: response\r\n  };\r\n  $.ajax({\r\n    type: 'POST',\r\n    url: \"{{script_url}}\",\r\n    data: data,\r\n    crossDomain: true,\r\n    timeout: 120000,\r\n    success:function(result){\r\n      //as it stands, this will never happen as Collector doesn't allow posts to it.\r\n    }\r\n  })\r\n  .catch(function(error){\r\n    //read the google sheet \r\n    /*\r\n    ParseGSX.parseGSX(data.question_id,function(result){\r\n      show_question(result);\r\n    });\r\n    */\r\n  });\r\n}\r\n\r\nresponse_obj = {\r\n  question_no : -1,\r\n  responses   : []\r\n}\r\n\r\n\r\n\r\n\r\n    \r\nvar ParseGSX = (function() {\r\n\r\n  var _defaultCallback = function(data) {\r\n    console.log(data);\r\n  };\r\n\r\n  var _parseRawData = function(res) {\r\n    var finalData = [];\r\n    res.feed.entry.forEach(function(entry){\r\n      var parsedObject = {};\r\n      for (var key in entry) {\r\n        if (key.substring(0,4) === \"gsx$\") {\r\n          parsedObject[key.slice(4)] = entry[key][\"$t\"];\r\n        }\r\n      }\r\n      finalData.push(parsedObject);\r\n    });\r\n    var processGSXData = _defaultCallback;\r\n    processGSXData(finalData);\r\n  };\r\n\r\n  var parseGSX = function(spreadsheetID, callback) {\r\n    var url = \"https://spreadsheets.google.com/feeds/list/\" + spreadsheetID + \"/od6/public/values?alt=json\";\r\n    var ajax = $.ajax(url);\r\n    if (callback) { _defaultCallback = callback; }\r\n    $.when(ajax).then(_parseRawData);\r\n  };\r\n\r\n  return { parseGSX: parseGSX };\r\n\r\n})();\r\n\r\n\r\n//based on solution by csharptest.net at https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\nfunction makeid(length) {\r\n   var result           = '';\r\n   var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmonpqrstuvwxyz1234567890';\r\n   var charactersLength = characters.length;\r\n   for ( var i = 0; i < length; i++ ) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n   }\r\n   return result;\r\n}\r\n\r\n\r\n</script>", "class_vote_teacher": "<!--\r\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\r\n    A program for running experiments on the web\r\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\r\n\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License version 3 as published by\r\n    the Free Software Foundation.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n \t\t\r\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\r\n*/\r\n\r\n-->\r\n<style>\r\n#before_start{\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:600;\r\n  height:300;\r\n}\r\n#chartdiv {\r\n  width: 100%;\r\n  height: 600px;\r\n}\r\n#header_reveal_table td{\r\n  padding:10px;\r\n}\r\n#hide_results{\r\n  display:none;\r\n}\r\n.text_resp_div{\r\n  padding:10px;\r\n  margin:10px;\r\n  width:100%;\r\n}\r\n#trial_contents{\r\n  display:none;\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:600;\r\n  height:600;\r\n}\r\n\r\n</style>\r\n<div id=\"before_start\">\r\n  <button class=\"btn btn-primary btn-lg btn-block\" id=\"start_quiz_btn\">Start</button>\r\n  <button class=\"btn btn-primary btn-lg btn-block\" id=\"resume_quiz_btn\">Resume</button>\r\n</div>\r\n<div id=\"trial_contents\">\r\n  <table id=\"header_reveal_table\">\r\n    <tr>\r\n      <td colspan=\"3\">  \r\n        <h1 id=\"question_header\"></h1>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <!--\r\n        <button class=\"btn btn-primary hide_reveal_results\" id=\"show_results\">Reveal</button>    \r\n        <button class=\"btn btn-primary hide_reveal_results\" id=\"hide_results\">Hide</button>    \r\n        -->\r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-danger\" id=\"previous_question_btn\">Previous</button>    \r\n      </td>\r\n      <td>\r\n        <button class=\"btn btn-success\" id=\"next_question_btn\">Next</button>    \r\n      </td>\r\n    </tr>\r\n  </table>\r\n  <div id=\"output_div\"></div>\r\n</div>\r\n\r\n<!-- libraries -->\r\n<script src = \"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js\"></script>\r\n\r\n<!-- local script -->\r\n<script>\r\n\r\noutput_contents = {\r\n  current : \"\",\r\n  list: [],\r\n  js_charts: {}\r\n}\r\n\r\nvar quest_no = 0;\r\n\r\n\r\n// actions by class\r\n$(\".hide_reveal_results\").on(\"click\",function(){\r\n  \r\n  $(\".hide_reveal_results\").hide();\r\n  // show is \"Reveal\" clicked\r\n  if(this.innerHTML == \"Reveal\"){\r\n    $(\"#hide_results\").show();\r\n    $(\"#output_div\").fadeIn(100);\r\n  } else {\r\n  //hide if \"hide\" clicked\r\n    $(\"#show_results\").show();\r\n    $(\"#output_div\").hide();\r\n  }\r\n});\r\n\r\n\r\n\r\n//actions by id: start, next, previous then end\r\n///////////////////////////////////////////////\r\n$(\"#start_quiz_btn\").on(\"click\",function(){\r\n  quest_no = 0;\r\n  post_action(\"start\",function(){\r\n    $(\"#previous_question_btn\").hide(); //by definition cannot need this\r\n    \r\n    //if there's more than one question, then need to see next button.\r\n    //if(quest_array.length > 1){\r\n      $(\"#next_question_btn\").show(); //by definition must need this\r\n    //}\r\n    \r\n    $(\"#before_start\").hide();\r\n    $(\"#trial_contents\").show();\r\n    generate_chart(quest_no);\r\n  });\r\n});\r\n\r\n$(\"#next_question_btn\").on(\"click\",function(){\r\n  post_action(\"next\",function(){\r\n    console.dir(\"next clicked\");\r\n    $(\"#previous_question_btn\").show(); //by definition must see this\r\n    quest_no++;\r\n    generate_chart(quest_no);\r\n  });\r\n});\r\n\r\n$(\"#previous_question_btn\").on(\"click\",function(){\r\n  post_action(\"previous\",function(){\r\n    $(\"#next_question_btn\").show(); //by definition must see this\r\n    quest_no--;\r\n    generate_chart(quest_no);\r\n  });\r\n});\r\n\r\n/* end quiz button\r\n$(\"#previous_question_btn\").on(\"click\",function(){\r\n  post_action(\"previous\",function(){\r\n    ParseGSX.parseGSX(data.response_id,function(result){\r\n      response_obj = result;\r\n      generate_chart();\r\n    });\r\n  });\r\n});\r\n*/\r\n\r\n\r\n\r\n//functions alphabetically\r\n//////////////////////////\r\n\r\nfunction calculate_chart_data(response_obj,local_quest_no){\r\n                                \r\n  local_quest_no = local_quest_no + 1;\r\n                                \r\n  var this_q_resps = response_obj.map(function(row){\r\n    return row[\"q\" + local_quest_no + \"resp\"];\r\n  });\r\n  //identify the frequencies of each unique value\r\n  var counts = {};\r\n  //by typeof at https://stackoverflow.com/questions/5667888/counting-the-occurrences-frequency-of-array-elements\r\n  for (var i = 0; i < this_q_resps.length; i++) {\r\n    var response = this_q_resps[i];\r\n    counts[response] = counts[response] ? counts[response] + 1 : 1;\r\n  }\r\n  return counts;\r\n}\r\n\r\nfunction choice_question(quest_array, response_obj, local_quest_no){\r\n  [all_resps,\r\n  data_values,\r\n  back_color_array,\r\n  bord_color_array] = resps_values(quest_array,\r\n                                   response_obj,\r\n                                   local_quest_no);\r\n  \r\n  $(\".output_content\").hide();\r\n    \r\n  //chartdiv\r\n  var output_id = 'output' + local_quest_no;\r\n  if(output_contents.list.indexOf(output_id) == -1){\r\n    $(\"#output_div\").append('<canvas class=\"output_content\" id=\"' + output_id +'\" width=\"400\" height=\"400\"></canvas>');\r\n    canvas = document.getElementById(output_id);\r\n    ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n    output_contents.js_charts[output_id] = new Chart(ctx, {\r\n      type: 'horizontalBar',\r\n      data: {\r\n        labels: all_resps,\r\n        datasets: [{\r\n          label: '# of Votes',\r\n          data: data_values,\r\n          backgroundColor: back_color_array,\r\n          borderColor: bord_color_array,\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n              fontSize: 20\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              fontSize: 20\r\n            }\r\n          }]\r\n        }\r\n      }\r\n    });\r\n    output_contents.list.push(output_id);\r\n    \r\n    refresh_output(local_quest_no);\r\n  } else {\r\n    $(\"#\" + output_id).show();\r\n  }\r\n}\r\n\r\nfunction text_question(quest_array, response_obj, local_quest_no){\r\n  [all_resps,\r\n  data_values,\r\n  back_color_array,\r\n  bord_color_array] = resps_values(quest_array,\r\n                                   response_obj,\r\n                                   local_quest_no);\r\n  \r\n  $(\".output_content\").hide();\r\n    \r\n  var unique_resps = list_resps(response_obj,local_quest_no);\r\n  var output_id = 'output' + local_quest_no;\r\n  if(output_contents.list.indexOf(output_id) == -1){\r\n    $(\"#output_div\").append('<div class=\"output_content\" id=\"' + output_id +'\" width=\"400\" height=\"400\"></div>');\r\n\r\n    var output_html = \"\";\r\n    unique_resps.forEach(function(this_resp){\r\n      output_html += \"<button class='btn btn-primary text_resp_div'>\" + this_resp + \"</button>\";\r\n    }); \r\n    \r\n    $(\"#\" + output_id).html(output_html);\r\n    output_contents.list.push(output_id);\r\n    refresh_output(local_quest_no);\r\n  } else {\r\n    $(\"#\" + output_id).show();\r\n  }\r\n}\r\n\r\nfunction generate_chart(local_quest_no){\r\n  ParseGSX.parseGSX(data.question_id,function(quest_array){\r\n    ParseGSX.parseGSX(data.response_id,function(response_obj){\r\n    \r\n      $(\"#question_header\").html(quest_array[local_quest_no].question);\r\n      \r\n      var quest_type = quest_array[local_quest_no].type;\r\n      \r\n      switch(quest_type.toLowerCase()){\r\n        case \"choice\":\r\n        case \"multiple choice\":\r\n        case \"multiple_choice\":\r\n          choice_question(quest_array,\r\n                          response_obj,\r\n                          local_quest_no);\r\n          break;\r\n        case \"text\":\r\n          text_question(quest_array,\r\n                        response_obj,\r\n                        local_quest_no);\r\n          break;\r\n\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction list_resps(response_obj,this_quest_no){\r\n  this_quest_no = this_quest_no + 1;\r\n  \r\n  var quest_key = \"q\" + this_quest_no + \"resp\";\r\n  var unique_resps = [];\r\n  response_obj.forEach(function(row){\r\n    if(unique_resps.indexOf(row[quest_key]) == -1){\r\n      unique_resps.push(row[quest_key]);\r\n    }\r\n  });\r\n  return unique_resps;\r\n}\r\n\r\n\r\nfunction post_action(action,response){\r\n  data = {\r\n    question_id: \"{{question_id}}\",\r\n    response_id: \"{{response_id}}\",\r\n    action:      action\r\n  };\r\n  $.ajax({\r\n    type: 'POST',\r\n    url: \"{{script_url}}\",\r\n    data: data,\r\n    crossDomain: true,\r\n    timeout: 120000,\r\n    success:function(response){\r\n      //as it stands, this will never happen as Collector doesn't allow posts to it.\r\n    }\r\n  })\r\n  .catch(function(error){\r\n    //read the google sheet \r\n    response();\r\n  });\r\n}\r\n\r\nfunction refresh_output(local_quest_no){\r\n  \r\n  console.dir(\"local_quest_no\");\r\n  console.dir(local_quest_no);\r\n  \r\n  var output_id = 'output' + local_quest_no;\r\n  \r\n  var url = \"https://spreadsheets.google.com/feeds/list/{{response_id}}/od6/public/values?alt=json\";\r\n  $.get(url,function(res){\r\n    var finalData = [];\r\n    res.feed.entry.forEach(function(entry){\r\n      var parsedObject = {};\r\n      for (var key in entry) {\r\n        if (key.substring(0,4) === \"gsx$\") {\r\n          parsedObject[key.slice(4)] = entry[key][\"$t\"];\r\n        }\r\n      }\r\n      finalData.push(parsedObject);\r\n    });\r\n    \r\n    var chartCount = calculate_chart_data(finalData,\r\n                                      local_quest_no);\r\n    \r\n\r\n    \r\n    //identify what type of question it is!\r\n      //identify what the class of the visible output_content is\r\n    var element_type = $(\".output_content:visible\")[0].tagName.toLowerCase();\r\n    \r\n    switch(element_type){\r\n      case \"canvas\":\r\n      var labels = output_contents.js_charts[output_id].data.labels;\r\n      \r\n      var data_values = labels.map(function(key){\r\n        if(typeof(chartCount[key]) !== \"undefined\"){\r\n          return chartCount[key];\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      \r\n      output_contents.js_charts[output_id].data.datasets[0].data = data_values;\r\n      output_contents.js_charts[output_id].update();        \r\n        break;\r\n        \r\n      case \"div\":\r\n        var unique_resps = list_resps(finalData,local_quest_no);\r\n        \r\n        var output_html = \"\";\r\n        unique_resps.forEach(function(this_resp){\r\n          output_html += \"<button class='btn btn-primary text_resp_div'>\" + this_resp + \"</button>\";\r\n        }); \r\n        \r\n        $(\"#\" + output_id).html(output_html);\r\n        break;\r\n    }\r\n\r\n    \r\n    setTimeout(function(){\r\n      refresh_output(local_quest_no);\r\n    },1000);  \r\n  });\r\n  \r\n  /*\r\n  if (callback) { _defaultCallback = callback; }\r\n  $.when(ajax).then(_parseRawData);\r\n  */\r\n  \r\n}\r\n\r\nfunction resps_values(quest_array, response_obj, local_quest_no){\r\n  \r\n  console.dir(quest_array);\r\n  console.dir(JSON.stringify(quest_array));\r\n  \r\n                        \r\n  chartCount        = calculate_chart_data(response_obj,\r\n                                           local_quest_no);\r\n                                           \r\n  var all_resps     = quest_array[local_quest_no].responses.split(\"|\");\r\n  var correct       = quest_array[local_quest_no].correct;\r\n  var correct_index = all_resps.indexOf(correct);\r\n  \r\n  var correct_color = 'rgba(75, 192, 192,'; //  0.8)';\r\n  var wrong_color   = 'rgba(255, 99, 132,'; //  0.8)';\r\n  var neutral_color = 'rgba(54, 162, 235,'; //  0.8)';\r\n  \r\n  //colors if there is no correct answer\r\n  if(correct_index == -1){\r\n    back_color_array = all_resps.map(function(row){\r\n      return neutral_color + \" 0.8)\";\r\n    });\r\n    bord_color_array = all_resps.map(function(row){\r\n      return neutral_color + \" 1)\";\r\n    });\r\n  } else {\r\n    back_color_array = all_resps.map(function(row,index){\r\n      if(index == correct_index){\r\n        return correct_color + \" 0.8)\";\r\n      } else {\r\n        return wrong_color + \" 0.8)\";  \r\n      }\r\n    });\r\n    bord_color_array = all_resps.map(function(row,index){\r\n      if(index == correct_index){\r\n        return correct_color + \" 1)\";\r\n      } else {\r\n        return wrong_color + \" 1)\";\r\n      }\r\n    });\r\n  }\r\n  \r\n  var data_values = all_resps.map(function(key){\r\n    if(typeof(chartCount[key]) !== \"undefined\"){\r\n      return chartCount[key];\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n  \r\n  return [all_resps,\r\n          data_values,\r\n          back_color_array,\r\n          bord_color_array];\r\n}\r\n\r\n//Code from online sources\r\n//////////////////////////\r\n\r\n//based on code found at: https://raw.githubusercontent.com/drumwolf/parse-gsx/0ba67bf115eac96e0763777a4fb2c485a35e2daa/parse-gsx-ajax.js\r\nvar ParseGSX = (function() {\r\n  var _defaultCallback = function(data) {\r\n    console.log(data);\r\n  };\r\n  var _parseRawData = function(res) {\r\n    var finalData = [];\r\n    res.feed.entry.forEach(function(entry){\r\n      var parsedObject = {};\r\n      for (var key in entry) {\r\n        if (key.substring(0,4) === \"gsx$\") {\r\n          parsedObject[key.slice(4)] = entry[key][\"$t\"];\r\n        }\r\n      }\r\n      finalData.push(parsedObject);\r\n    });\r\n    var processGSXData = _defaultCallback;\r\n    processGSXData(finalData);\r\n  };\r\n  var parseGSX = function(spreadsheetID, callback) {\r\n    var url = \"https://spreadsheets.google.com/feeds/list/\" + spreadsheetID + \"/od6/public/values?alt=json\";\r\n    var ajax = $.get(url);\r\n    if (callback) { _defaultCallback = callback; }\r\n    $.when(ajax).then(_parseRawData);\r\n  };\r\n  return { parseGSX: parseGSX };\r\n})();\r\n\r\n</script>"}, "python_procs": {"procedure_1.csv": "Item,trial type,Max Time,Text,Shuffle 1,\r\n2,class_vote_teacher,user,Thank you for participating in this experiment. The task will begin during the next trial.,off,\r\n,,,,,"}, "python_conditions": "Name,Notes,Stimuli,Procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,random,,,5,\r\n,,,,,,,,,,", "python_stims": {"stimuli_1.csv": "Cue,Answer,question_id,script_url,response_id,\r\nA,ginger,1_45I8VIvnHwR3gvDyizZO9pY9lZv-lLQH6MWk3QTnhg,https://script.google.com/macros/s/AKfycbz3KSAcuF_6Gg6-25l2a22dNSeMvo5agjPHB467BceyUbzJOfry/exec,1XOsZuX2-_fSIDnveJSBoIHbpSXnYpoM7N9QQ8HO4ctA,\r\nB,Banana,,,,\r\n,,,,,"}, "conditions": [{"name": "condition_1", "notes": "You can put more detailed notes in this field", "stimuli": "stimuli_1.csv", "procedure": "procedure_1.csv", "fullscreen": "off", "welcome": "", "participant_id": "random", "end_message": "", "start_message": "", "buffer": "5", "": ""}]}